{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nconst headers = {\n  'Content-Type': 'application/json'\n};\nexport async function Area(areaId) {\n  _s();\n  const [lampList, setLampList] = useState([]);\n  const {\n    isLoading,\n    error\n  } = useQuery([\"lamp\"], () => axios.get(\"http://localhost:3002/lamp/\" + areaId, {\n    headers\n  }).then(res => setAreaList(res.data)));\n  return;\n}\n_s(Area, \"fn20zq6uUWtI03YGmFqlH8CvElI=\", true);\n_c = Area;\nvar _c;\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"names":["axios","headers","Area","areaId","_s","lampList","setLampList","useState","isLoading","error","useQuery","get","then","res","setAreaList","data","_c","$RefreshReg$"],"sources":["C:/Users/judev/OneDrive/Desktop/SWE/SWEllfish14/lumosminima/src/Area.js"],"sourcesContent":["import axios from \"axios\";\r\nconst headers = {\r\n    \r\n    'Content-Type': 'application/json'\r\n  \r\n}\r\n\r\nexport async function Area(areaId){\r\n    const [lampList,setLampList] = useState([]);\r\n        const {isLoading, error} = useQuery([\"lamp\"], () =>\r\n        axios.get(\"http://localhost:3002/lamp/\"+areaId,{headers})\r\n        .then((res) => setAreaList(res.data))\r\n        )\r\n        return \r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG;EAEZ,cAAc,EAAE;AAEpB,CAAC;AAED,OAAO,eAAeC,IAAIA,CAACC,MAAM,EAAC;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM;IAACC,SAAS;IAAEC;EAAK,CAAC,GAAGC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,MAC9CV,KAAK,CAACW,GAAG,CAAC,6BAA6B,GAACR,MAAM,EAAC;IAACF;EAAO,CAAC,CAAC,CACxDW,IAAI,CAAEC,GAAG,IAAKC,WAAW,CAACD,GAAG,CAACE,IAAI,CAAC,CACpC,CAAC;EACD;AACR;AAACX,EAAA,CAPqBF,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}